.. py:class:: XFoil(airfoil, Re = 0.0, mach = 0.0, n_crit = 9.0, xtr_upper = 1.0, xtr_lower = 1.0, hinge_point_x = 0.75, full_potential = False, max_iter = 100, xfoil_command = 'xfoil', xfoil_repanel = True, xfoil_repanel_n_points = 279, include_bl_data = False, verbose = False, timeout = 30, working_directory = None)

   Bases: :py:obj:`aerosandbox.common.ExplicitAnalysis`


   An interface to XFoil, a 2D airfoil analysis tool developed by Mark Drela at MIT.

   Requires XFoil to be on your computer; XFoil is available here: https://web.mit.edu/drela/Public/web/xfoil/

   It is recommended (but not required) that you add XFoil to your system PATH environment variable such that it can
   be called with the command `xfoil`. If this is not the case, you need to specify the path to your XFoil
   executable using the `xfoil_command` argument of the constructor.

   Usage example:

   >>> xf = XFoil(
   >>>     airfoil=Airfoil("naca2412").repanel(n_points_per_side=100),
   >>>     Re=1e6,
   >>> )
   >>>
   >>> result_at_single_alpha = xf.alpha(5)
   >>> result_at_several_CLs = xf.cl([0.5, 0.7, 0.8, 0.9])
   >>> result_at_multiple_alphas = xf.alpha([3, 5, 60]) # Note: if a result does not converge (such as the 60 degree case here), it will not be included in the results.



   .. py:exception:: XFoilError

      Bases: :py:obj:`Exception`


      Common base class for all non-exit exceptions.



   .. py:method:: XFoil.__repr__()
   .. py:method:: XFoil._default_keystrokes(airfoil_filename, output_filename)
   .. py:method:: XFoil._run_xfoil(run_command, read_bl_data_from = None)
   .. py:method:: XFoil.open_interactive()
   .. py:method:: XFoil.alpha(alpha, start_at = 0)
   .. py:method:: XFoil.cl(cl, start_at = 0)