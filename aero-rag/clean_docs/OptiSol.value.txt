.. py:method:: OptiSol.value(x, recursive = True, warn_on_unknown_types = False)

   Gets the value of a variable (or a data structure) at the solution point. This solution point is the optimum,
       if the optimization process solved successfully.

   On a computer science level, this method converts a symbolic optimization variable to a concrete float or
       array value. More generally, it converts any Python data structure (along with any of its contents,
       recursively, at unlimited depth), replacing any symbolic optimization variables it finds with concrete float
       or array values.

   Note that, for convenience, you can simply call:
   >>> sol(x)
   if you prefer. This is equivalent to calling this method with the syntax:
   >>> sol.value(x)
   (these are aliases of each other)

   :param x: A Python data structure to substitute values into, using the solution in this OptiSol object.
   :param recursive: If True, the substitution will be performed recursively. Otherwise, only the top-level data
                     structure will be converted.
   :param warn_on_unknown_types: If True, a warning will be issued if a data type that cannot be converted or
                                 parsed as definitively un-convertable is encountered.

   :returns:

             A copy of `x`, where all symbolic optimization variables (recursively substituted at unlimited depth)
                 have been converted to float or array values.

   Usage:





