.. py:method:: AeroBuildup.run_with_stability_derivatives(alpha=True, beta=True, p=True, q=True, r=True)

   Computes the aerodynamic forces and moments on the airplane, and the stability derivatives.

   Arguments essentially determine which stability derivatives are computed. If a stability derivative is not
   needed, leaving it False will speed up the computation.

   :param - alpha: If True, compute the stability derivatives with respect to the angle of attack (alpha).
   :type - alpha: bool
   :param - beta: If True, compute the stability derivatives with respect to the sideslip angle (beta).
   :type - beta: bool
   :param - p: If True, compute the stability derivatives with respect to the body-axis roll rate (p).
   :type - p: bool
   :param - q: If True, compute the stability derivatives with respect to the body-axis pitch rate (q).
   :type - q: bool
   :param - r: If True, compute the stability derivatives with respect to the body-axis yaw rate (r).
   :type - r: bool

   Returns: a dictionary with keys:

       - 'F_g' : an [x, y, z] list of forces in geometry axes [N]
       - 'F_b' : an [x, y, z] list of forces in body axes [N]
       - 'F_w' : an [x, y, z] list of forces in wind axes [N]
       - 'M_g' : an [x, y, z] list of moments about geometry axes [Nm]
       - 'M_b' : an [x, y, z] list of moments about body axes [Nm]
       - 'M_w' : an [x, y, z] list of moments about wind axes [Nm]
       - 'L'   : the lift force [N]. Definitionally, this is in wind axes.
       - 'Y'   : the side force [N]. This is in wind axes.
       - 'D'   : the drag force [N]. Definitionally, this is in wind axes.
       - 'l_b' : the rolling moment, in body axes [Nm]. Positive is roll-right.
       - 'm_b' : the pitching moment, in body axes [Nm]. Positive is pitch-up.
       - 'n_b' : the yawing moment, in body axes [Nm]. Positive is nose-right.
       - 'CL'  : the lift coefficient [-]. Definitionally, this is in wind axes.
       - 'CY'  : the sideforce coefficient [-]. This is in wind axes.
       - 'CD'  : the drag coefficient [-]. Definitionally, this is in wind axes.
       - 'Cl'  : the rolling coefficient [-], in body axes
       - 'Cm'  : the pitching coefficient [-], in body axes
       - 'Cn'  : the yawing coefficient [-], in body axes

       Along with additional keys, depending on the value of the `alpha`, `beta`, `p`, `q`, and `r` arguments. For
       example, if `alpha=True`, then the following additional keys will be present:

           - 'CLa' : the lift coefficient derivative with respect to alpha [1/rad]
           - 'CDa' : the drag coefficient derivative with respect to alpha [1/rad]
           - 'CYa' : the sideforce coefficient derivative with respect to alpha [1/rad]
           - 'Cla' : the rolling moment coefficient derivative with respect to alpha [1/rad]
           - 'Cma' : the pitching moment coefficient derivative with respect to alpha [1/rad]
           - 'Cna' : the yawing moment coefficient derivative with respect to alpha [1/rad]
           - 'x_np': the neutral point location in the x direction [m]

       Nondimensional values are nondimensionalized using reference values in the AeroBuildup.airplane object.

       Data types:
           - The "L", "Y", "D", "l_b", "m_b", "n_b", "CL", "CY", "CD", "Cl", "Cm", and "Cn" keys are:

               - floats if the OperatingPoint object is not vectorized (i.e., if all attributes of OperatingPoint
               are floats, not arrays).

               - arrays if the OperatingPoint object is vectorized (i.e., if any attribute of OperatingPoint is an
               array).

           - The "F_g", "F_b", "F_w", "M_g", "M_b", and "M_w" keys are always lists, which will contain either
           floats or arrays, again depending on whether the OperatingPoint object is vectorized or not.



